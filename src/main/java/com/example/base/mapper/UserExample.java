package com.example.base.mapper;

import java.util.ArrayList;
import java.util.List;

public class UserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    public UserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCode1IsNull() {
            addCriterion("code1 is null");
            return (Criteria) this;
        }

        public Criteria andCode1IsNotNull() {
            addCriterion("code1 is not null");
            return (Criteria) this;
        }

        public Criteria andCode1EqualTo(Byte value) {
            addCriterion("code1 =", value, "code1");
            return (Criteria) this;
        }

        public Criteria andCode1NotEqualTo(Byte value) {
            addCriterion("code1 <>", value, "code1");
            return (Criteria) this;
        }

        public Criteria andCode1GreaterThan(Byte value) {
            addCriterion("code1 >", value, "code1");
            return (Criteria) this;
        }

        public Criteria andCode1GreaterThanOrEqualTo(Byte value) {
            addCriterion("code1 >=", value, "code1");
            return (Criteria) this;
        }

        public Criteria andCode1LessThan(Byte value) {
            addCriterion("code1 <", value, "code1");
            return (Criteria) this;
        }

        public Criteria andCode1LessThanOrEqualTo(Byte value) {
            addCriterion("code1 <=", value, "code1");
            return (Criteria) this;
        }

        public Criteria andCode1In(List<Byte> values) {
            addCriterion("code1 in", values, "code1");
            return (Criteria) this;
        }

        public Criteria andCode1NotIn(List<Byte> values) {
            addCriterion("code1 not in", values, "code1");
            return (Criteria) this;
        }

        public Criteria andCode1Between(Byte value1, Byte value2) {
            addCriterion("code1 between", value1, value2, "code1");
            return (Criteria) this;
        }

        public Criteria andCode1NotBetween(Byte value1, Byte value2) {
            addCriterion("code1 not between", value1, value2, "code1");
            return (Criteria) this;
        }

        public Criteria andCode2IsNull() {
            addCriterion("code2 is null");
            return (Criteria) this;
        }

        public Criteria andCode2IsNotNull() {
            addCriterion("code2 is not null");
            return (Criteria) this;
        }

        public Criteria andCode2EqualTo(Short value) {
            addCriterion("code2 =", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2NotEqualTo(Short value) {
            addCriterion("code2 <>", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2GreaterThan(Short value) {
            addCriterion("code2 >", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2GreaterThanOrEqualTo(Short value) {
            addCriterion("code2 >=", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2LessThan(Short value) {
            addCriterion("code2 <", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2LessThanOrEqualTo(Short value) {
            addCriterion("code2 <=", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2In(List<Short> values) {
            addCriterion("code2 in", values, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2NotIn(List<Short> values) {
            addCriterion("code2 not in", values, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2Between(Short value1, Short value2) {
            addCriterion("code2 between", value1, value2, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2NotBetween(Short value1, Short value2) {
            addCriterion("code2 not between", value1, value2, "code2");
            return (Criteria) this;
        }

        public Criteria andCode3IsNull() {
            addCriterion("code3 is null");
            return (Criteria) this;
        }

        public Criteria andCode3IsNotNull() {
            addCriterion("code3 is not null");
            return (Criteria) this;
        }

        public Criteria andCode3EqualTo(Integer value) {
            addCriterion("code3 =", value, "code3");
            return (Criteria) this;
        }

        public Criteria andCode3NotEqualTo(Integer value) {
            addCriterion("code3 <>", value, "code3");
            return (Criteria) this;
        }

        public Criteria andCode3GreaterThan(Integer value) {
            addCriterion("code3 >", value, "code3");
            return (Criteria) this;
        }

        public Criteria andCode3GreaterThanOrEqualTo(Integer value) {
            addCriterion("code3 >=", value, "code3");
            return (Criteria) this;
        }

        public Criteria andCode3LessThan(Integer value) {
            addCriterion("code3 <", value, "code3");
            return (Criteria) this;
        }

        public Criteria andCode3LessThanOrEqualTo(Integer value) {
            addCriterion("code3 <=", value, "code3");
            return (Criteria) this;
        }

        public Criteria andCode3In(List<Integer> values) {
            addCriterion("code3 in", values, "code3");
            return (Criteria) this;
        }

        public Criteria andCode3NotIn(List<Integer> values) {
            addCriterion("code3 not in", values, "code3");
            return (Criteria) this;
        }

        public Criteria andCode3Between(Integer value1, Integer value2) {
            addCriterion("code3 between", value1, value2, "code3");
            return (Criteria) this;
        }

        public Criteria andCode3NotBetween(Integer value1, Integer value2) {
            addCriterion("code3 not between", value1, value2, "code3");
            return (Criteria) this;
        }

        public Criteria andCode4IsNull() {
            addCriterion("code4 is null");
            return (Criteria) this;
        }

        public Criteria andCode4IsNotNull() {
            addCriterion("code4 is not null");
            return (Criteria) this;
        }

        public Criteria andCode4EqualTo(Integer value) {
            addCriterion("code4 =", value, "code4");
            return (Criteria) this;
        }

        public Criteria andCode4NotEqualTo(Integer value) {
            addCriterion("code4 <>", value, "code4");
            return (Criteria) this;
        }

        public Criteria andCode4GreaterThan(Integer value) {
            addCriterion("code4 >", value, "code4");
            return (Criteria) this;
        }

        public Criteria andCode4GreaterThanOrEqualTo(Integer value) {
            addCriterion("code4 >=", value, "code4");
            return (Criteria) this;
        }

        public Criteria andCode4LessThan(Integer value) {
            addCriterion("code4 <", value, "code4");
            return (Criteria) this;
        }

        public Criteria andCode4LessThanOrEqualTo(Integer value) {
            addCriterion("code4 <=", value, "code4");
            return (Criteria) this;
        }

        public Criteria andCode4In(List<Integer> values) {
            addCriterion("code4 in", values, "code4");
            return (Criteria) this;
        }

        public Criteria andCode4NotIn(List<Integer> values) {
            addCriterion("code4 not in", values, "code4");
            return (Criteria) this;
        }

        public Criteria andCode4Between(Integer value1, Integer value2) {
            addCriterion("code4 between", value1, value2, "code4");
            return (Criteria) this;
        }

        public Criteria andCode4NotBetween(Integer value1, Integer value2) {
            addCriterion("code4 not between", value1, value2, "code4");
            return (Criteria) this;
        }

        public Criteria andCode5IsNull() {
            addCriterion("code5 is null");
            return (Criteria) this;
        }

        public Criteria andCode5IsNotNull() {
            addCriterion("code5 is not null");
            return (Criteria) this;
        }

        public Criteria andCode5EqualTo(Long value) {
            addCriterion("code5 =", value, "code5");
            return (Criteria) this;
        }

        public Criteria andCode5NotEqualTo(Long value) {
            addCriterion("code5 <>", value, "code5");
            return (Criteria) this;
        }

        public Criteria andCode5GreaterThan(Long value) {
            addCriterion("code5 >", value, "code5");
            return (Criteria) this;
        }

        public Criteria andCode5GreaterThanOrEqualTo(Long value) {
            addCriterion("code5 >=", value, "code5");
            return (Criteria) this;
        }

        public Criteria andCode5LessThan(Long value) {
            addCriterion("code5 <", value, "code5");
            return (Criteria) this;
        }

        public Criteria andCode5LessThanOrEqualTo(Long value) {
            addCriterion("code5 <=", value, "code5");
            return (Criteria) this;
        }

        public Criteria andCode5In(List<Long> values) {
            addCriterion("code5 in", values, "code5");
            return (Criteria) this;
        }

        public Criteria andCode5NotIn(List<Long> values) {
            addCriterion("code5 not in", values, "code5");
            return (Criteria) this;
        }

        public Criteria andCode5Between(Long value1, Long value2) {
            addCriterion("code5 between", value1, value2, "code5");
            return (Criteria) this;
        }

        public Criteria andCode5NotBetween(Long value1, Long value2) {
            addCriterion("code5 not between", value1, value2, "code5");
            return (Criteria) this;
        }

        public Criteria andTipsIsNull() {
            addCriterion("tips is null");
            return (Criteria) this;
        }

        public Criteria andTipsIsNotNull() {
            addCriterion("tips is not null");
            return (Criteria) this;
        }

        public Criteria andTipsEqualTo(String value) {
            addCriterion("tips =", value, "tips");
            return (Criteria) this;
        }

        public Criteria andTipsNotEqualTo(String value) {
            addCriterion("tips <>", value, "tips");
            return (Criteria) this;
        }

        public Criteria andTipsGreaterThan(String value) {
            addCriterion("tips >", value, "tips");
            return (Criteria) this;
        }

        public Criteria andTipsGreaterThanOrEqualTo(String value) {
            addCriterion("tips >=", value, "tips");
            return (Criteria) this;
        }

        public Criteria andTipsLessThan(String value) {
            addCriterion("tips <", value, "tips");
            return (Criteria) this;
        }

        public Criteria andTipsLessThanOrEqualTo(String value) {
            addCriterion("tips <=", value, "tips");
            return (Criteria) this;
        }

        public Criteria andTipsLike(String value) {
            addCriterion("tips like", value, "tips");
            return (Criteria) this;
        }

        public Criteria andTipsNotLike(String value) {
            addCriterion("tips not like", value, "tips");
            return (Criteria) this;
        }

        public Criteria andTipsIn(List<String> values) {
            addCriterion("tips in", values, "tips");
            return (Criteria) this;
        }

        public Criteria andTipsNotIn(List<String> values) {
            addCriterion("tips not in", values, "tips");
            return (Criteria) this;
        }

        public Criteria andTipsBetween(String value1, String value2) {
            addCriterion("tips between", value1, value2, "tips");
            return (Criteria) this;
        }

        public Criteria andTipsNotBetween(String value1, String value2) {
            addCriterion("tips not between", value1, value2, "tips");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbggenerated do_not_delete_during_merge Mon Feb 27 22:23:57 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbggenerated Mon Feb 27 22:23:57 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}